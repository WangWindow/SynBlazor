@using SynBlazor.Services
@inject IThemeService ThemeService
@inherits LayoutComponentBase

<FluentLayout Class="bg-theme-base h-screen flex flex-col">
    <FluentHeader>
        <span class="text-xl font-bold text-theme-primary">SynBlazor</span>
        <FluentSpacer />
        <ThemeToggle />
    </FluentHeader>
    <FluentStack Class="main bg-theme-base flex-1 overflow-hidden" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Class="body-content bg-theme-base flex-1 overflow-auto">
            <ErrorBoundary>
                <ChildContent>
                    <div class="content bg-theme-base text-theme-primary h-full">
                        @Body
                    </div>
                </ChildContent>
                <ErrorContent Context="ex">
                    <div class="blazor-error-boundary bg-theme-error-bg text-theme-error p-4 m-4 rounded border border-theme-error">
                        @ex.Message
                    </div>
                </ErrorContent>
            </ErrorBoundary>
        </FluentBodyContent>
    </FluentStack>
    <FluentFooter Class="bg-theme-nav border-theme-base">
        <a href="https://www.fluentui-blazor.net" target="_blank"
           class="text-theme-secondary hover:text-theme-primary transition-colors">Documentation and demos</a>
        <FluentSpacer />
        <a href="https://learn.microsoft.com/en-us/aspnet/core/blazor" target="_blank"
           class="text-theme-secondary hover:text-theme-primary transition-colors">About Blazor</a>
    </FluentFooter>
    <FluentDialogProvider />
</FluentLayout>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ThemeService.InitializeAsync();
        await base.OnInitializedAsync();
    }
}
