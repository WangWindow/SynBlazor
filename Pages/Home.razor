@page "/"
@inject IProjectService ProjectService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>SynBlazor - PDF综述转PPT</PageTitle>

<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800">
    <div class="container mx-auto px-4 py-12">
        <!-- Header Section -->
        <div class="text-center mb-16">
            <h1 class="text-5xl font-bold text-gray-900 dark:text-white mb-6">
                SynBlazor
            </h1>
            <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed">
                智能PDF综述转换工具，通过AI分析学术文献内容，自动生成专业的PowerPoint演示文稿
            </p>
        </div>

        <!-- Quick Actions -->
        <div class="max-w-4xl mx-auto mb-12">
            <div class="grid md:grid-cols-2 gap-8">
                <!-- Create New Project Card -->
                <FluentCard class="p-8 hover:shadow-lg transition-all duration-300 border-0 bg-white dark:bg-gray-800">
                    <div class="text-center">
                        <FluentIcon Value="@(new Icons.Regular.Size48.DocumentAdd())"
                                   Color="Color.Accent" class="mb-4" />
                        <h3 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4">
                            创建新项目
                        </h3>
                        <p class="text-gray-600 dark:text-gray-300 mb-6">
                            上传PDF综述文件，开始智能转换过程
                        </p>
                        <FluentButton Appearance="Appearance.Accent"
                                     class="px-8 py-3 text-lg font-medium"
                                     @onclick="ShowCreateProjectDialog">
                            开始创建
                        </FluentButton>
                    </div>
                </FluentCard>

                <!-- View Projects Card -->
                <FluentCard class="p-8 hover:shadow-lg transition-all duration-300 border-0 bg-white dark:bg-gray-800">
                    <div class="text-center">                        <FluentIcon Value="@(new Icons.Regular.Size48.Folder())"
                                   Color="Color.Accent" class="mb-4" />
                        <h3 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4">
                            查看项目
                        </h3>
                        <p class="text-gray-600 dark:text-gray-300 mb-6">
                            管理已有项目，查看处理进度和下载结果
                        </p>
                        <FluentButton Appearance="Appearance.Outline"
                                     class="px-8 py-3 text-lg font-medium"
                                     @onclick="NavigateToProjects">
                            项目总览
                        </FluentButton>
                    </div>
                </FluentCard>
            </div>
        </div>

        <!-- Features Section -->
        <div class="max-w-6xl mx-auto">
            <h2 class="text-3xl font-bold text-center text-gray-900 dark:text-white mb-12">
                核心功能
            </h2>
            <div class="grid md:grid-cols-3 gap-8">
                <div class="text-center p-6">
                    <FluentIcon Value="@(new Icons.Regular.Size32.DocumentPdf())"
                               Color="Color.Info" class="mb-4" />
                    <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                        PDF智能解析
                    </h4>
                    <p class="text-gray-600 dark:text-gray-300">
                        自动提取文档结构、关键内容和学术引用
                    </p>
                </div>
                <div class="text-center p-6">                    <FluentIcon Value="@(new Icons.Regular.Size32.Settings())"
                               Color="Color.Success" class="mb-4" />
                    <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                        AI内容分析
                    </h4>
                    <p class="text-gray-600 dark:text-gray-300">
                        深度理解文献内容，生成结构化演示大纲
                    </p>
                </div>                <div class="text-center p-6">
                    <FluentIcon Value="@(new Icons.Regular.Size32.Document())"
                               Color="Color.Warning" class="mb-4" />
                    <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                        自动生成PPT
                    </h4>
                    <p class="text-gray-600 dark:text-gray-300">
                        基于Slidev模板，输出专业的PowerPoint文件
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Project Dialog -->
<FluentDialog @bind-Open="showCreateDialog" Modal="true" TrapFocus="true">
    <FluentDialogHeader>
        <h3>创建新项目</h3>
    </FluentDialogHeader>
    <FluentDialogBody>
        <FluentStack Orientation="Orientation.Vertical" Class="gap-4">
            <FluentTextField @bind-Value="newProjectTitle"
                           Label="项目标题"
                           Required="true"
                           Placeholder="请输入项目标题..." />

            <FluentTextArea @bind-Value="newProjectDescription"
                          Label="项目描述"
                          Rows="3"
                          Placeholder="简要描述您的综述内容..." />
        </FluentStack>
    </FluentDialogBody>
    <FluentDialogFooter>
        <FluentButton Appearance="Appearance.Neutral" @onclick="CloseCreateDialog">
            取消
        </FluentButton>
        <FluentButton Appearance="Appearance.Accent"
                     @onclick="CreateProject"
                     Loading="@isCreatingProject"
                     Disabled="@(string.IsNullOrWhiteSpace(newProjectTitle))">
            创建项目
        </FluentButton>
    </FluentDialogFooter>
</FluentDialog>

@code {
    private bool showCreateDialog = false;
    private bool isCreatingProject = false;
    private string newProjectTitle = string.Empty;
    private string newProjectDescription = string.Empty;

    private void ShowCreateProjectDialog()
    {
        showCreateDialog = true;
    }

    private void CloseCreateDialog()
    {
        showCreateDialog = false;
        newProjectTitle = string.Empty;
        newProjectDescription = string.Empty;
    }

    private async Task CreateProject()
    {
        if (string.IsNullOrWhiteSpace(newProjectTitle))
            return;

        isCreatingProject = true;
        try
        {
            // TODO: 实现项目创建逻辑
            var project = await ProjectService.CreateProjectAsync(newProjectTitle, newProjectDescription);

            // 创建成功后跳转到项目详情页
            Navigation.NavigateTo($"/project/{project.Id}");
        }
        catch (Exception ex)
        {
            // TODO: 显示错误消息
            await JSRuntime.InvokeVoidAsync("alert", $"创建项目失败: {ex.Message}");
        }
        finally
        {
            isCreatingProject = false;
            CloseCreateDialog();
        }
    }

    private void NavigateToProjects()
    {
        Navigation.NavigateTo("/projects");
    }
}
